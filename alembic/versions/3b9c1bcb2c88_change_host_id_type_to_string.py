"""Change host_id type to String

Revision ID: 3b9c1bcb2c88
Revises: 3d7ed64a0073
Create Date: 2025-02-05 00:23:46.668392

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b9c1bcb2c88'
down_revision: Union[str, None] = '3d7ed64a0073'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("likes", "host_id", type_=sa.String(), existing_type=sa.UUID())
    # ### end Alembic commands ###


def downgrade() -> None:
    op.alter_column("likes", "host_id", type_=sa.UUID(), existing_type=sa.String())
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('videos',
    # sa.Column('db_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('host_id', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('host_service', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('channel_id', sa.UUID(), autoincrement=False, nullable=True),
    # sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('db_id', name='videos_pkey')
    # )
    # op.create_table('users',
    # sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('password', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('user_id', name='users_pkey')
    # )
    # op.create_table('revokedtoken',
    # sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    # sa.Column('jti', sa.VARCHAR(), autoincrement=False, nullable=False),
    # sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='revokedtoken_pkey')
    # )
    # op.create_index('ix_revokedtoken_jti', 'revokedtoken', ['jti'], unique=True)
    # op.create_table('likes',
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('host_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('liked_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='likes_pkey')
    # )
    # op.create_table('channels',
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='channels_pkey')
    # )
    # op.create_table('subscriptions',
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('channel_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('subscribed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='subscriptions_pkey')
    # )
    # op.create_table('comments',
    # sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    # sa.Column('host_id', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    # sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='comments_pkey')
    # )
    # # ### end Alembic commands ###
